AWSTemplateFormatVersion: '2010-09-09'
Description: '3-Tier Architecture Infrastructure - Database Stack (Simplified)'

Parameters:
  DbSecurityGroupId:
    Description: Security group ID for database instances
    Type: String

  PrivateDbSubnet1Id:
    Description: ID of the first private DB subnet
    Type: String

  PrivateDbSubnet2Id:
    Description: ID of the second private DB subnet
    Type: String

  DbInstanceClass:
    Description: Database instance class
    Type: String
    Default: db.t3.micro

  DbEngine:
    Description: Database engine
    Type: String
    Default: mysql

  DbEngineVersion:
    Description: Database engine version
    Type: String
    Default: 8.0.32

  DbName:
    Description: Database name
    Type: String
    Default: cfdb

  DbAdminUsername:
    Description: Database admin username
    Type: String
    Default: admin

  DbAdminPassword:
    Description: Database admin password
    Type: String
    Default: Password123
    NoEcho: true

Resources:
  # DB Subnet Group
  DatabaseSubnetGroup:
    Type: AWS::RDS::DBSubnetGroup
    Properties:
      DBSubnetGroupDescription: Data Tier DB Subnet Group
      SubnetIds:
        - !Ref PrivateDbSubnet1Id
        - !Ref PrivateDbSubnet2Id
      Tags:
        - Key: Name
          Value: CF-Data Tier DB Subnet Group
        - Key: Environment
          Value: Production

  # Primary RDS Instance
  PrimaryDBInstance:
    Type: AWS::RDS::DBInstance
    Properties:
      AllocatedStorage: 20
      DBName: !Ref DbName
      Engine: !Ref DbEngine
      EngineVersion: !Ref DbEngineVersion
      DBInstanceClass: !Ref DbInstanceClass
      MasterUsername: !Ref DbAdminUsername
      MasterUserPassword: !Ref DbAdminPassword
      DBSubnetGroupName: !Ref DatabaseSubnetGroup
      VPCSecurityGroups: 
        - !Ref DbSecurityGroupId
      MultiAZ: false
      PubliclyAccessible: false
      StorageType: gp2
      StorageEncrypted: true
      BackupRetentionPeriod: 7
      Tags:
        - Key: Name
          Value: CF-Data-Tier-DB
        - Key: Environment
          Value: Production

Outputs:
  DBEndpoint:
    Description: Connection endpoint for the database
    Value: !GetAtt PrimaryDBInstance.Endpoint.Address
    Export:
      Name: !Sub "${AWS::StackName}-DBEndpoint"

  DBPort:
    Description: Database port
    Value: !GetAtt PrimaryDBInstance.Endpoint.Port
    Export:
      Name: !Sub "${AWS::StackName}-DBPort"

  DatabaseName:
    Description: Database name
    Value: !Ref DbName
    Export:
      Name: !Sub "${AWS::StackName}-DatabaseName"

  DatabaseUsername:
    Description: Database admin username
    Value: !Ref DbAdminUsername
    Export:
      Name: !Sub "${AWS::StackName}-DatabaseUsername"